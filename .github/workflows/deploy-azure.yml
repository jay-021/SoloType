name: Build and Deploy to Azure Web App

env:
  AZURE_WEBAPP_NAME: 'solotype'
  NODE_VERSION: '20'
  PNPM_VERSION: '8'
  # IMAGE_NAME will be set in a step to ensure lowercase

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Make repository name lowercase to avoid Docker tag validation errors
      - name: Set repo name to lowercase
        id: repo_name
        run: |
          REPO_LC=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')
          REPO_OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
          echo "repo_lc=${REPO_LC}" >> $GITHUB_ENV
          echo "owner_lc=${REPO_OWNER_LC}" >> $GITHUB_ENV
          echo "image_name=ghcr.io/${REPO_OWNER_LC}/$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')/solotype-frontend" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry using the GITHUB_TOKEN
      # This allows pushing to ghcr.io repositories owned by the same user/org
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image to GHCR
      # Tags both with commit SHA for precise version and latest for easy reference
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.image_name }}:${{ github.sha }}
            ${{ env.image_name }}:latest
          file: ./Dockerfile
          build-args: |
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
            NODE_VERSION=${{ env.NODE_VERSION }}
            PNPM_VERSION=${{ env.PNPM_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # We need to set the image_name again in this job
      - name: Set repo name to lowercase
        run: |
          REPO_OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
          echo "image_name=ghcr.io/${REPO_OWNER_LC}/$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')/solotype-frontend" >> $GITHUB_ENV

      # Login to Azure using service principal credentials stored in AZURE_CREDENTIALS secret
      # AZURE_CREDENTIALS should contain output from: az ad sp create-for-rbac --name "myApp" --role contributor \
      # --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Web/sites/{app-name} \
      # --sdk-auth
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure Web App using the container image from GHCR
      # The image reference must exactly match what was pushed to GHCR
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: '${{ env.image_name }}:${{ github.sha }}'
          
      # Optional: Logout from Azure after deployment
      - name: Logout from Azure
        run: az logout
        if: always() 