name: Deploy to Heroku

env:
  # Replace 'your-heroku-app-name-here' with your actual Heroku app name
  HEROKU_APP_NAME: 'solotype'
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Heroku Container Registry
      # Note: Heroku requires '_' as username and API key as password
      - name: Login to Heroku Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.heroku.com
          username: _
          password: ${{ secrets.HEROKU_API_KEY }}

      # Build and push to Heroku Container Registry
      # Note: Heroku requires the image to be tagged as web process type
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest
          file: ./Dockerfile
          build-args: |
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
            NODE_VERSION=${{ env.NODE_VERSION }}
            PNPM_VERSION=${{ env.PNPM_VERSION }}

      # Install Heroku CLI for container release command
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      # Release the container on Heroku
      # This promotes the image to be used by the web dyno
      - name: Release image on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web --app ${{ env.HEROKU_APP_NAME }} 